This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-05-30T02:29:03.248Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
public/
  assets/
    360 case/
      360_Degree_Care_Case_Study.md
    JPW case/
      Jones_Pressure_Washing_Case_Study.md
    MoodTunes/
      Moodtunes_Dev_Handoff.md
    favicon_16x16.svg
    favicon_200x200.svg
    favicon_32x32.svg
src/
  app/
    works/
      360-degree-care/
        page.tsx
      jones-pressure-washing/
        page.tsx
      moodtunes/
        page.tsx
    globals.css
    layout.tsx
    page.tsx
  components/
    caseStudy/
      AvailableCases.tsx
      FinalReflections.tsx
      Goals&Challenges.tsx
      ProblemFraming.tsx
      ProjectOverview.tsx
      Research&Discovery.tsx
      SectionTitle.tsx
      Strategy&Design.tsx
      WorkHero.tsx
    home/
      AboutMe.tsx
      FeaturedWorks.tsx
      HomeHero.tsx
    ui/
      button.tsx
      navigation-menu.tsx
      sheet.tsx
    AppNavbar.tsx
    footer.tsx
    mockups.tsx
    navbar.tsx
  lib/
    caseStudies/
      allCases.ts
      case360.ts
      caseJpw.ts
      caseMood.tsx
    hooks/
      useSmoothScroll.tsx
    constants.ts
    types.ts
    utils.ts
.eslintrc.js
.gitignore
.prettierrc
components.json
next.config.mjs
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: public/assets/360 case/360_Degree_Care_Case_Study.md
================
## Case Study: 360 Degree Care - Building Digital Trust in Home Health

### 0.0 Problem Framing - Creating Digital Trust for a New Care Brand

360 Degree Care was a newly established home health care agency in New Jersey. With no digital presence, they were virtually invisible to families searching online for in-home support. In a highly sensitive industry built on trust, that lack of visibility became a major barrier to growth.

The client needed a professional website that could both inform and reassure their target audience: adults researching care options for aging parents or loved ones. The goal wasn’t just to generate leads — it was to build trust at a glance, answer common questions, and help users take that emotionally difficult first step.

The design challenge was to combine emotional clarity with an easy-to-navigate information structure tailored to anxious, time-sensitive users making high-stakes decisions.

---

### 0.1 Project Overview

360 Degree Care approached me to design and launch their first website. I led the full UX and design process — including site architecture, content strategy, and high-fidelity mockups — and worked closely with the client to align on structure and flow. While the final visual style reflected strong client preferences, I ensured the user experience remained clear, accessible, and emotionally resonant throughout.

I also collaborated with the developer from the earliest stages to keep implementation aligned with both the design and evolving client input. This helped us stay nimble and avoid rework as decisions shifted.

---

### 0.2 Project Goals & Challenges

The client’s primary goal was to establish a digital presence quickly and start building trust with families in need of in-home care. While they had experience in traditional marketing, they were less familiar with the nuances of digital UX and web strategy. The project required thoughtful communication to align user-centered design decisions with a visually driven brand vision.

I focused early efforts on educating the client about effective UX principles — including content hierarchy, scannability, and what builds trust for first-time visitors — while ensuring the final site honored their preferences and goals.

**Client Goals**  
- Establish legitimacy as a licensed care provider  
- Emphasize dignity and active lifestyles in imagery  
- Explain services clearly and in detail  
- Communicate with transparency and warmth

**Constraints**  
- Limited content available and short timeline  
- Client rejected proposed calming color palette  
- Client insisted on oversized typography for readability  
- Non-standard layout and styling requests

---

### 0.3 Research & Discovery

I began with a competitive review of the top home care agencies in northern New Jersey, analyzing how they structured their websites, the tone of their messaging, and how effectively they reassured visitors navigating emotionally complex decisions.

To complement that, I also conducted informal discovery through conversations with friends and family members who had recently gone through the process of finding home care. These stories underscored the urgency, emotional strain, and confusion that often accompany these decisions — and shaped how I approached tone, structure, and visual hierarchy.

**Key Research Takeaways**  
- Most competitors used calming color palettes and soft, reassuring imagery  
- Sites with clear FAQs and multiple contact options instilled more trust  
- Visitors scanned for key info like insurance accepted, service areas, and 24/7 availability  
- Overly modern or salesy designs felt cold and disconnected from user needs  
- CTAs needed to be visible early and often — visitors shouldn’t have to search to reach out

---

### 0.4 UX Strategy & Design Decisions

Given the emotional nature of the service, I proposed a visual direction that combined calming blue tones with warm, uplifting imagery — portraying aging with dignity and vitality. While the client chose a more vibrant palette to stand out from competitors, they embraced the imagery concept fully, and it became a key visual theme across the site.

Throughout the project, I worked to preserve core UX principles: structuring information to reduce cognitive load, emphasizing clarity of message, and ensuring large, tappable areas for mobile users. The goal was to keep the experience reassuring and intuitive, regardless of aesthetic preferences.

**Design Highlights**  
- Emotionally Calibrated Copy: Tone was crafted to feel warm and informative, avoiding jargon while addressing key user concerns  
- Imagery & Tone: Photography featured active, joyful older adults to reinforce dignity, comfort, and optimism  
- Color Palette & Branding: The client’s preference for vibrant orange was balanced with neutral supporting tones to maintain readability and trust  
- Location Callouts: Local areas were integrated across pages to build geographic authority and support SEO

---

### 0.5 Final Designs & Reflections

Despite a tight timeline and strong client-led visual direction, I delivered a responsive, multi-page website that remained grounded in UX principles. The final experience earned positive feedback during early user testing, with clear content structure, emotionally calibrated messaging, and strong local relevance that helped build immediate trust.

**Key Achievements**  
- Launched a fully responsive, multi-page website on a tight 5-week timeline  
- Led UX structure and content strategy to support trust-building and clarity  
- Developed high-fidelity designs tailored to mobile and desktop audiences  
- Created localized, SEO-aware content to increase visibility across NJ markets  
- Collaborated closely with a developer to efficiently implement shifting client feedback

**Lessons Learned**  
- Advocated for UX while respecting a strongly client-led brand vision  
- Improved communication techniques with non-technical stakeholders  
- Reinforced the importance of flexible thinking under aesthetic constraints  
- Practiced translating emotion-rich research into actionable design decisions  
- Gained experience designing for high-empathy use cases where trust is critical

🔗 Live Site: https://360degreecare.net

================
File: public/assets/JPW case/Jones_Pressure_Washing_Case_Study.md
================
## Case Study: Jones Pressure Washing - New Local Business with No Credibility

### 0.0 Problem Framing - New Local Business with No Credibility

Jones Pressure Washing was a brand-new company entering the competitive home services market in New Jersey. With no website, reviews, or digital footprint, they faced a major challenge: earning trust from customers who rely on online credibility to make quick decisions.

The client needed more than a basic website—they needed a professional, trustworthy brand presence that could stand out locally and convert visitors into leads. The design had to clearly communicate services, professionalism, and local relevance, while remaining simple enough to manage for a small team.

At its core, this project was about crafting legitimacy from scratch in an industry where visual trust, clarity, and local SEO directly impact business growth.

---

### 0.1 Project Overview

Jones Pressure Washing is a residential and commercial soft washing company based in New Jersey. At the start of the project, they had a basic one-page site that lacked clear structure, hierarchy, or branding. Their goal was to elevate their digital presence with a professional website that could build trust, attract local leads, and support long-term growth.

I led the UX strategy, responsive design, content planning, and SEO foundation. I collaborated closely with a developer to ensure every custom-coded component was implemented as designed. The result is a clean, mobile-first experience built to establish credibility and drive conversions — even without existing reviews or a visual portfolio.

---

### 0.2 Project Goals & Challenges

With no content, brand identity, or online credibility in place, Jones Pressure Washing needed more than a visual facelift — they needed a foundation. Rather than rehash the limitations, I focused on building a site that could earn trust quickly through clarity, visual professionalism, and strong local signals. The challenge wasn’t just to make something look good — it was to design a conversion engine for a brand without a track record.

**Client Goals**  
- Establish a professional and trustworthy digital presence  
- Generate leads through clear, action-oriented CTAs  
- Clearly explain core services to first-time visitors  
- Rank well for local search terms in New Jersey

**Constraints**  
- No brand identity, portfolio, or testimonials  
- Limited visual assets or pre-written content  
- Highly competitive local market  
- Tight timeline: 6 weeks from start to launch

---

### 0.3 Research & Discovery

I conducted a competitive review of pressure washing businesses across Northern New Jersey, analyzing how they structured content, implemented SEO, and approached layout across desktop and mobile. I also read through Google and Yelp reviews to understand what customers cared about most — from communication and pricing to before-and-after results.

Because the client lacked testimonials and a visual portfolio, I explored how to build trust without traditional social proof. I supplemented my research by speaking with homeowners in my network to better understand how they choose service providers. These informal conversations revealed a strong reliance on first impressions, location visibility, and quick clarity about services and pricing.

**Key Research Takeaways**  
- Sites must establish trust within the first few seconds of landing  
- Services should be broken down into short, scannable chunks  
- Local SEO (county and town names) plays a major role in discovery  
- Mobile-first layouts are critical for on-the-go, last-minute searches  
- CTAs should appear early and often — users shouldn’t have to search for ways to take action

---

### 0.4 UX Strategy & Design Decisions

Instead of starting with wireframes, I moved directly into high-fidelity mockups based on competitive analysis and a content-first strategy. I used Figma to iterate layout ideas quickly, incorporating client feedback while applying UX best practices in hierarchy, spacing, and call-to-action design.

With no branding in place, I focused on structure, copy clarity, and visual trust signals to create a site that felt professional and conversion-ready. Every decision was grounded in one core objective: to build immediate credibility and make it easy for users to take action.

**Design Highlights**  
- Above-the-Fold CTAs: “Request Your Free Estimate” appears prominently on the homepage and is repeated throughout the site to reduce friction and drive leads  
- Premium Aesthetic: A black, white, and gold palette was chosen to convey a high-end feel, matching the client’s vision of an “elite” pressure washing brand  
- SEO-Informed Copy: Each service section included relevant keywords and H1/H2 structure to support local search optimization and improve findability  
- Service Architecture: Services were grouped into skimmable content blocks with links to dedicated pages, supporting both UX clarity and SEO indexing  
- Mobile Optimization: Tap targets were enlarged, content was vertically stacked, and the layout prioritized on-the-go usability to align with mobile-first browsing behavior  
- Local Targeting: Repeated geographic references (counties, towns) helped reinforce location relevance and build authority for local search

---

### 0.5 Final Designs & Reflections

This project demonstrated how thoughtful UX strategy can establish credibility from the ground up — even for a brand with no content, reviews, or digital footprint. By designing for where the business was headed, not just where it was at launch, I helped the client establish a polished digital presence they could confidently grow into.

Final development is currently in progress. All designs shown reflect approved deliverables, and I’m actively collaborating with the developer to bring them to life.

**Key Achievements**  
- Created a scalable site structure designed to grow with the business  
- Built a clean, professional brand presence from the ground up  
- Delivered a responsive, mobile-first layout with strong conversion intent  
- Designed an SEO-ready architecture with localized content and page structure  
- Developed strategic content in the absence of branding, portfolio, or testimonials

**Lessons Learned**  
- Starting with user needs leads to stronger outcomes than chasing visual trends  
- Content strategy can bridge gaps when visual assets are limited  
- Clear information architecture is essential for service-based websites  
- Local SEO considerations should shape site structure from the beginning  
- Designing for future growth requires conscious, scalable decisions early on

================
File: public/assets/MoodTunes/Moodtunes_Dev_Handoff.md
================
# Moodtunes – Developer Handoff Document

This document includes full case study content, context, and annotated goals for development implementation.

---

## 0.0 Problem Framing – Music That Matches the Moment

Users often feel disconnected from the music recommendations they receive. Traditional streaming algorithms focus on past behavior and general taste — but don’t account for real-time context like mood, energy level, or activity. As a result, users find themselves replaying the same playlists for workouts, focus, or relaxation, and are rarely exposed to new or local artists.

Moodtunes addresses this by letting users select how they feel in the moment and generating playlists that match that energy — while subtly surfacing local artists they might otherwise miss.

---

## 0.1 Project Overview

**Context:**  
Moodtunes is a conceptual mobile music app designed to improve how users discover playlists that reflect their real-time mood, energy level, or activity. Unlike traditional platforms that rely on taste history or engagement patterns, Moodtunes takes a user-centered approach — letting users guide their listening experience based on how they feel in the moment.

This project was initiated to expand my portfolio beyond client websites and explore the full product design process. I led all UX and UI design, including research, user flows, wireframes, and high-fidelity mockups. The app also introduces an additional layer of value by subtly promoting local artists, giving them visibility through emotionally aligned playlists.

Moodtunes allowed me to apply emotional design thinking, mobile-first UX, and product strategy within a realistic scope, while experimenting with new patterns of discovery in the music space.

**My Role:** UX/UI Designer, Copywriter  
**Client:** Conceptual Music App  
**Timeline:** 8 Weeks  
**Tools:** Figma, Web Research, ChatGPT  
**Deliverables:** User Flows, Wireframes, High-Fidelity Mockups

---

## 0.2 Project Goals & Challenges

The goal behind Moodtunes was to explore how music discovery could shift from algorithm-driven suggestions to real-time emotional curation. I wanted to create an experience that respected how users feel in the moment, not just what they’ve historically liked — while also giving local artists more visibility in a space dominated by mainstream data.

To strengthen emotional alignment, the playlist logic also draws inspiration from how certain frequencies can trigger psychological responses — calming, energizing, or focusing the listener. This helped inform both the tone of the UI and the intent behind curated playlist groupings.

**UX Goals:**
- Create a fast and frictionless flow where users can select their mood and receive music instantly.
- Balance emotional depth with simplicity.
- Build a system that introduces local or lesser-known artists in a non-intrusive way.

**Constraints:**
- No live user testing was conducted.
- Conceptual flows prioritize UX clarity over MVP functionality.

---

## 0.3 Research & Discovery

To ground the concept in real user needs, I evaluated how current music platforms approach discovery. I reviewed Spotify, Pandora, and SoundCloud, focusing on how they match music to user context.

- **Spotify:** Algorithmic trends, no mood input.  
- **Pandora:** Categorizes by traits, lacks emotional/situational context.  
- **SoundCloud:** Indie-friendly but chaotic browsing.

These gaps revealed a clear opportunity to design a mobile experience that meets users where they are emotionally and mentally.

**Key Research Takeaways:**
- Existing platforms lack contextual awareness.
- Users crave novelty without sacrificing relevance.
- Discovery of local artists is still low.
- Over-personalization leads to repetition.
- Users associate music with tasks/emotions but apps don’t accommodate that well.

---

## 0.4 UX Strategy & Design Decisions

With a mobile-first approach, the UX goal was to minimize friction and make discovery feel instant, personal, and emotionally relevant. The interface was designed to stay clean and emotionally resonant without overwhelming users.

**Design Highlights:**
- **Mood-Based Input Flow:** Minimized taps to reduce decision fatigue.
- **Emotionally-Aligned UI:** Used calm tones, clean spacing.
- **Local Artist Discovery:** Subtle label tags promote emerging voices.
- **Playlist Logic:** Grouped by sound frequency principles for emotional tone.

---

## Final Designs & Reflections

Moodtunes was designed to explore product-focused UX beyond marketing sites. The challenge was to create an emotionally intelligent music experience that responded to how users feel in real time.

I handled concept through UI delivery, using research, wireframes, and high-fi mockups. The result: a flow that curates music by mood, energy, and activity — while boosting visibility for local artists.

**Key Achievements:**
- Built full UX flow from onboarding to artist exploration.
- Created high-fidelity mobile mockups.
- Scalable curation system.
- Lightweight discovery UX.

**Lessons Learned:**
- Simplified input = better emotional UX.
- Wireframing complex interactions early saves time later.
- Product case studies reveal richer UX patterns.
- Solo concept work benefits from realistic scoping.

================
File: public/assets/favicon_16x16.svg
================
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="16" height="16" rx="3" fill="#2F2F2F"/>
<path d="M7.268 4.104C6.54 3.824 5.852 3.684 5.204 3.684C4.564 3.684 4.064 3.82 3.704 4.092C3.344 4.364 3.164 4.74 3.164 5.22C3.164 5.804 3.468 6.256 4.076 6.576C4.348 6.712 4.644 6.84 4.964 6.96C5.292 7.072 5.62 7.2 5.948 7.344C6.276 7.488 6.576 7.652 6.848 7.836C7.12 8.02 7.34 8.276 7.508 8.604C7.676 8.924 7.76 9.336 7.76 9.84C7.76 10.336 7.62 10.76 7.34 11.112C7.06 11.464 6.72 11.704 6.32 11.832C5.928 11.952 5.468 12.012 4.94 12.012C3.956 12.012 3.116 11.768 2.42 11.28L2.48 11.184C2.744 11.392 3.084 11.564 3.5 11.7C3.924 11.828 4.356 11.892 4.796 11.892C5.444 11.892 5.996 11.744 6.452 11.448C6.916 11.144 7.148 10.7 7.148 10.116C7.148 9.476 6.844 8.976 6.236 8.616C5.964 8.456 5.664 8.308 5.336 8.172C5.016 8.036 4.692 7.896 4.364 7.752C4.036 7.6 3.736 7.432 3.464 7.248C2.856 6.848 2.552 6.28 2.552 5.544C2.552 4.96 2.748 4.488 3.14 4.128C3.532 3.76 4.12 3.576 4.904 3.576C5.696 3.576 6.5 3.712 7.316 3.984L7.268 4.104ZM13.7918 3.6V3.72H10.0118V7.56H13.5158V7.68H10.0118V12H9.01578V3.6H13.7918Z" fill="#6BE28C"/>
</svg>

================
File: public/assets/favicon_200x200.svg
================
<svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="200" height="200" rx="30" fill="#2F2F2F"/>
<path d="M91.68 61.04C84.4 58.24 77.52 56.84 71.04 56.84C64.64 56.84 59.64 58.2 56.04 60.92C52.44 63.64 50.64 67.4 50.64 72.2C50.64 78.04 53.68 82.56 59.76 85.76C62.48 87.12 65.44 88.4 68.64 89.6C71.92 90.72 75.2 92 78.48 93.44C81.76 94.88 84.76 96.52 87.48 98.36C90.2 100.2 92.4 102.76 94.08 106.04C95.76 109.24 96.6 113.36 96.6 118.4C96.6 123.36 95.2 127.6 92.4 131.12C89.6 134.64 86.2 137.04 82.2 138.32C78.28 139.52 73.68 140.12 68.4 140.12C58.56 140.12 50.16 137.68 43.2 132.8L43.8 131.84C46.44 133.92 49.84 135.64 54 137C58.24 138.28 62.56 138.92 66.96 138.92C73.44 138.92 78.96 137.44 83.52 134.48C88.16 131.44 90.48 127 90.48 121.16C90.48 114.76 87.44 109.76 81.36 106.16C78.64 104.56 75.64 103.08 72.36 101.72C69.16 100.36 65.92 98.96 62.64 97.52C59.36 96 56.36 94.32 53.64 92.48C47.56 88.48 44.52 82.8 44.52 75.44C44.52 69.6 46.48 64.88 50.4 61.28C54.32 57.6 60.2 55.76 68.04 55.76C75.96 55.76 84 57.12 92.16 59.84L91.68 61.04ZM156.918 56V57.2H119.118V95.6H154.158V96.8H119.118V140H109.158V56H156.918Z" fill="#6BE28C"/>
</svg>

================
File: public/assets/favicon_32x32.svg
================
<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="32" height="32" rx="5" fill="#2F2F2F"/>
<path d="M14.536 9.208C13.08 8.648 11.704 8.368 10.408 8.368C9.128 8.368 8.128 8.64 7.408 9.184C6.688 9.728 6.328 10.48 6.328 11.44C6.328 12.608 6.936 13.512 8.152 14.152C8.696 14.424 9.288 14.68 9.928 14.92C10.584 15.144 11.24 15.4 11.896 15.688C12.552 15.976 13.152 16.304 13.696 16.672C14.24 17.04 14.68 17.552 15.016 18.208C15.352 18.848 15.52 19.672 15.52 20.68C15.52 21.672 15.24 22.52 14.68 23.224C14.12 23.928 13.44 24.408 12.64 24.664C11.856 24.904 10.936 25.024 9.88 25.024C7.912 25.024 6.232 24.536 4.84 23.56L4.96 23.368C5.488 23.784 6.168 24.128 7 24.4C7.848 24.656 8.712 24.784 9.592 24.784C10.888 24.784 11.992 24.488 12.904 23.896C13.832 23.288 14.296 22.4 14.296 21.232C14.296 19.952 13.688 18.952 12.472 18.232C11.928 17.912 11.328 17.616 10.672 17.344C10.032 17.072 9.384 16.792 8.728 16.504C8.072 16.2 7.472 15.864 6.928 15.496C5.712 14.696 5.104 13.56 5.104 12.088C5.104 10.92 5.496 9.976 6.28 9.256C7.064 8.52 8.24 8.152 9.808 8.152C11.392 8.152 13 8.424 14.632 8.968L14.536 9.208ZM27.5836 8.2V8.44H20.0236V16.12H27.0316V16.36H20.0236V25H18.0316V8.2H27.5836Z" fill="#6BE28C"/>
</svg>

================
File: src/app/works/360-degree-care/page.tsx
================
import WorkHero from '@/components/caseStudy/WorkHero'
import ProblemFraming from '@/components/caseStudy/ProblemFraming'
import ProjectOverview from '@/components/caseStudy/ProjectOverview'
import GoalsAndChallenges from '@/components/caseStudy/Goals&Challenges'
import ResearchAndDiscovery from '@/components/caseStudy/Research&Discovery'
import StrategyAndDesign from '@/components/caseStudy/Strategy&Design'
import FinalReflections from '@/components/caseStudy/FinalReflections'
import AvailableCases from '@/components/caseStudy/AvailableCases'

import case360 from '@/lib/caseStudies/case360'

export default function Works360Degree() {
  return (
    <main className="text-text-body">
      <WorkHero
        img="/assets/360 case/Hero.png"
        header="360 Degree Care - UX Case Study"
        descriptor="Designing a user-centered home care website while balancing evolving client preferences"
      />
      <ProblemFraming
        header="Problem Framing - Creating Digital Trust for a New Care Brand"
        items={case360.problemFraming}
      />
      <ProjectOverview {...case360.projectOverview} />
      <GoalsAndChallenges {...case360.goalsAndChallenges} />
      <ResearchAndDiscovery {...case360.researchAndDiscovery} />
      <StrategyAndDesign {...case360.strategyAndDesign} />
      <FinalReflections {...case360.finalReflections} />
      <AvailableCases current="360 Degree Care" showHeader />
    </main>
  )
}

================
File: src/app/works/jones-pressure-washing/page.tsx
================
import WorkHero from '@/components/caseStudy/WorkHero'
import ProblemFraming from '@/components/caseStudy/ProblemFraming'
import ProjectOverview from '@/components/caseStudy/ProjectOverview'
import GoalsAndChallenges from '@/components/caseStudy/Goals&Challenges'
import StrategyAndDesign from '@/components/caseStudy/Strategy&Design'
import FinalReflections from '@/components/caseStudy/FinalReflections'
import AvailableCases from '@/components/caseStudy/AvailableCases'
import ResearchAndDiscovery from '@/components/caseStudy/Research&Discovery'

import caseJpw from '@/lib/caseStudies/caseJpw'

export default function WorksJPW() {
  return (
    <main className="text-text-body">
      <WorkHero
        img="/assets/JPW case/JPW_Hero.png"
        header="Jones Pressure Washing - UX Case Study"
        descriptor="Designing scalable, trust-focused website for a new exterior washing company in New Jersey"
      />
      <ProblemFraming
        items={caseJpw.problemFraming}
        header="Problem Framing - New Local Business with No Credibility"
      />
      <ProjectOverview {...caseJpw.projectOverview} />
      <GoalsAndChallenges {...caseJpw.goalsAndChallenges} />
      <ResearchAndDiscovery {...caseJpw.researchAndDiscovery} />
      <StrategyAndDesign {...caseJpw.strategyAndDesign} />
      <FinalReflections {...caseJpw.finalReflections} />
      <AvailableCases current="Jones Pressure Washing" showHeader />
    </main>
  )
}

================
File: src/app/works/moodtunes/page.tsx
================
import WorkHero from '@/components/caseStudy/WorkHero'
import ProblemFraming from '@/components/caseStudy/ProblemFraming'
import ProjectOverview from '@/components/caseStudy/ProjectOverview'
import GoalsAndChallenges from '@/components/caseStudy/Goals&Challenges'
import StrategyAndDesign from '@/components/caseStudy/Strategy&Design'
import FinalReflections from '@/components/caseStudy/FinalReflections'
import AvailableCases from '@/components/caseStudy/AvailableCases'
import ResearchAndDiscovery from '@/components/caseStudy/Research&Discovery'

import caseMood from '@/lib/caseStudies/caseMood'

export default function WorksMoodTunes() {
  return (
    <main className="text-text-body">
      <WorkHero
        img="/assets/MoodTunes/HomeScreen.png"
        header="MoodTunes - UX Case Study"
        descriptor="Designing a music discovery experience that curates playlists based on mood, energy, and activity."
      />
      <ProblemFraming
        items={caseMood.problemFraming}
        header="Problem Framing - New Local Business with No Credibility"
      />
      <ProjectOverview {...caseMood.projectOverview} />
      <GoalsAndChallenges {...caseMood.goalsAndChallenges} />
      <ResearchAndDiscovery {...caseMood.researchAndDiscovery} />
      <StrategyAndDesign {...caseMood.strategyAndDesign} />
      <FinalReflections {...caseMood.finalReflections} />
      <AvailableCases current="MoodTunes" showHeader />
    </main>
  )
}

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Backgrounds */
  --bg-main: #262626;
  --bg-section: #1f1f1f;
  --bg-subtle: #2a2a2a;

  /* Text */
  --text-heading: #f2f2f2;
  --text-body: #cccccc;

  /* Accent */
  --green: #6be28c;
}

[data-theme='light'] {
  /* Backgrounds */
  --bg-main: #fafaf7;
  --bg-section: #f1f7f3;
  --bg-subtle: #e3e6e3;

  /* Text */
  --text-heading: #1e1e1e;
  --text-body: #444444;

  /* Accent */
  --green: #3ba66b;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

li::marker {
  color: var(--green);
}

.indentedList {
  margin-left: 2rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-white font-inter leading-snug;
  }

  main {
    @apply min-h-[calc(100dvh-8rem)];
  }

  h1,
  h2,
  h3,
  h4 {
    @apply text-text-heading mb-2 text-balance;
  }

  h1 {
    @apply text-3xl md:text-5xl font-bold;
  }

  h2 {
    @apply text-xl md:text-3xl font-bold;
  }

  h3 {
    @apply text-lg md:text-xl font-bold;
  }

  h4 {
    @apply font-semibold;
  }

  section {
    @apply scroll-mt-6;
  }
}

@layer components {
  .active {
    @apply font-bold;
  }

  .navLink {
    @apply transition-all duration-200 hover:text-primary;
  }

  .active-navLink {
    @apply text-primary;
  }

  .page {
    @apply w-full h-full min-h-fit;
  }

  .halfPage {
    @apply w-full h-1/2 min-h-fit;
  }

  .section {
    @apply mx-auto max-w-custom h-full pt-[4rem] px-x-gap pb-y-gap;
  }
}

================
File: src/app/layout.tsx
================
// app/layout.tsx
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import AppNavbar from '@/components/AppNavbar'
import Footer from '@/components/footer'
import { NavigationMap, CasesMap } from '@/lib/constants'
import './globals.css'

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap'
})

export const metadata: Metadata = {
  /* … all your existing metadata here … */
}

const navItems = Array.from(NavigationMap.values())
const caseItems = Array.from(CasesMap.values())

export default function RootLayout({
  children
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <head>
        <link
          rel="icon"
          href="/assets/favicon_32x32.svg"
          type="image/svg+xml"
        />
        <link rel="apple-touch-icon" href="/assets/favicon_200x200.svg" />
        <link rel="manifest" href="/site.webmanifest" />
      </head>
      <body className={inter.variable}>
        {/* our new client wrapper */}
        <AppNavbar navItems={navItems} caseItems={caseItems} />
        {children}
        <Footer />
      </body>
    </html>
  )
}

================
File: src/app/page.tsx
================
import HomeHero from '@/components/home/HomeHero'
import FeaturedWorks from '@/components/home/FeaturedWorks'
import AboutMe from '@/components/home/AboutMe'

export default function Home() {
  return (
    <main>
      <HomeHero />
      <FeaturedWorks />
      <AboutMe />
    </main>
  )
}

================
File: src/components/caseStudy/AvailableCases.tsx
================
import { useMemo } from 'react'
import Link from 'next/link'
import { FaArrowRight } from 'react-icons/fa6'

import allCases from '@/lib/caseStudies/allCases'

interface AdditionalCasesProps {
  current: string
  showHeader?: boolean
}

export default function AvailableCases({
  current,
  showHeader
}: AdditionalCasesProps) {
  const filtered = useMemo(
    () => allCases.filter(item => item.label !== current),
    [current]
  )

  return (
    <div className="section">
      {showHeader ? (
        <h3 className="text-text-heading text-center mb-6">
          View More Case Studies
        </h3>
      ) : null}
      <ul className="flex flex-wrap justify-center gap-4 mx-auto">
        {filtered.map(item => (
          <div
            key={item.label}
            className="flex-none w-[clamp(20rem,29vw,24rem)] grid grid-rows-2 shadow-xl rounded-xl border-primary bg-background-section">
            <div className="px-6 py-4 h-80">
              <img
                src={item.img}
                alt={`${item.label} example image`}
                className="object-fit h-full w-auto mx-auto object-contain"
              />
            </div>
            <div className="bg-background-subtle rounded-b-xl h-full">
              <div className="h-full px-6 py-8 grid grid-rows-[2rem_1fr_2rem] gap-4 items-start justify-items-start">
                <h3>{item.label}</h3>
                <p>{item.description}</p>
                <Link
                  className="pl-0 flex gap-3 items-center text-primary hover:underline"
                  href={item.destination}>
                  Read Case Study
                  <FaArrowRight size={18} className="text-primary" />
                </Link>
              </div>
            </div>
          </div>
        ))}
      </ul>
    </div>
  )
}

================
File: src/components/caseStudy/FinalReflections.tsx
================
'use client'

import { FaSquareCheck, FaLightbulb } from 'react-icons/fa6'

import Image from 'next/image'
import { SectionTitle } from './SectionTitle'
import { CasesMap } from '@/lib/constants'

const id = CasesMap.get(5).id

interface FinalReflectionsProps {
  achievments: string[]
  client: string
  description: string[]
  feedback: string
  img: string[]
  lessons: string[]
  subHeader: string
  url: string
}

export default function FinalReflections({
  achievments,
  client,
  description,
  feedback,
  img,
  lessons,
  subHeader,
  url
}: FinalReflectionsProps) {
  return (
    <section id={id}>
      <div className="section text-sm text-text-body space-y-4">
        <SectionTitle position="" header="Final Designs & Reflection" />
        <article className="space-y-4">
          {description.map(text => (
            <p key={text}>{text}</p>
          ))}
          <p>
            Live Website:{' '}
            <a
              href={url}
              className="transition-all duration-200 hover:text-text-heading">
              {url}
            </a>
          </p>
          <h3 className="text-center pt-8">{subHeader}</h3>
          <div className="flex flex-wrap justify-center gap-4 py-4 pb-20">
            {img.map(src => (
              <div
                key={src}
                className="
        relative 
        flex-none 
        w-full max-w-[90vw] h-[50vh] 
        sm:w-[clamp(20rem,25vw,32rem)] sm:h-[clamp(24rem,50vh,48rem)]
      ">
                <Image
                  src={src}
                  alt=""
                  fill
                  // below:
                  sizes="(max-width: 639px) 90vw, 25vw"
                  className="object-contain"
                />
              </div>
            ))}
          </div>
        </article>
        <article className="grid grid-cols-1 md:grid-cols-2 gap-6 pb-20">
          <div className="space-y-4">
            <h4 className="flex text-lg text-primary gap-2 items-center">
              <FaSquareCheck size={18} className="text-primary" />
              Key Achievements
            </h4>
            <ul className="space-y-3 list-disc pl-4">
              {achievments.map(achievment => (
                <li key={achievment}>{achievment}</li>
              ))}
            </ul>
          </div>
          <div className="space-y-4">
            <h4 className="flex text-lg text-primary gap-2 items-center">
              <FaLightbulb size={18} className="text-yellow-500" />
              Lessons Learned
            </h4>
            <ul className="space-y-3 list-disc pl-4">
              {lessons.map(lesson => (
                <li key={lesson}>{lesson}</li>
              ))}
            </ul>
          </div>
        </article>
        {feedback === '' ? null : (
          <article className="p-6 max-w-4xl bg-background-subtle mx-auto rounded-xl shadow-xl space-y-4">
            <h4 className="text-lg">Client Feedback</h4>
            <p>{feedback}</p>
            <p>- {client}</p>
          </article>
        )}
        <div>
          <div className="h-[1px] w-full bg-white mt-20" />
        </div>
      </div>
    </section>
  )
}

================
File: src/components/caseStudy/Goals&Challenges.tsx
================
'use client'
import { FaCheck, FaBan } from 'react-icons/fa6'

import { SectionTitle } from './SectionTitle'
import { CasesMap } from '@/lib/constants'

const id = CasesMap.get(2).id

interface GoalsAndChallengesProps {
  goals: string[]
  challenges: string[]
  description: string[]
}

export default function GoalsAndChallenges({
  goals,
  challenges,
  description
}: GoalsAndChallengesProps) {
  return (
    <section id={id} className="halfPage text-sm">
      <div className="section space-y-4">
        <SectionTitle
          position="0.2"
          header="Project Goals and Challenges"
          underline
        />
        <article className="space-y-4">
          {description.map(section => (
            <p key={section}>{section}</p>
          ))}
        </article>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <article>
            <h4 className="text-primary mb-3 text-lg">Client Goals</h4>
            <div className="flex flex-col gap-2">
              {goals.map(goal => (
                <div
                  key={goal}
                  className="grid grid-cols-[2rem_1fr] gap-4 items-center">
                  <FaCheck size={18} className="text-primary" />
                  <p>{goal}</p>
                </div>
              ))}
            </div>
          </article>
          <article>
            <h4 className="text-primary mb-3 text-lg">Constraints</h4>
            <div className="flex flex-col gap-2">
              {challenges.map(challenge => (
                <div
                  key={challenge}
                  className="grid grid-cols-[2rem_1fr] gap-4 items-center">
                  <FaBan size={16} className="text-yellow-500" />{' '}
                  <p>{challenge}</p>
                </div>
              ))}
            </div>
          </article>
        </div>
      </div>
    </section>
  )
}

================
File: src/components/caseStudy/ProblemFraming.tsx
================
import { SectionTitle } from './SectionTitle'
import { CasesMap } from '@/lib/constants'

const id = CasesMap.get(0).id

interface ProblemFramingProps {
  items: string[]
  header: string
}

export default function ProblemFraming({ items, header }: ProblemFramingProps) {
  return (
    <section id={id} className="halfPage">
      <div className="section">
        <SectionTitle position="0.0" header={header} />
        <div className="space-y-4">
          {items.map(text => (
            <p className="text-sm" key={text}>
              {text}
            </p>
          ))}
        </div>
      </div>
    </section>
  )
}

================
File: src/components/caseStudy/ProjectOverview.tsx
================
'use client'

import { SectionTitle } from './SectionTitle'
import { CasesMap } from '@/lib/constants'

const id = CasesMap.get(1).id

interface ProjectOverviewProps {
  client: string
  context: string[]
  deliverables: string[]
  roles: string[]
  timeline: string
  tools: string[]
}

export default function ProjectOverview({
  client,
  context,
  deliverables,
  roles,
  timeline,
  tools
}: ProjectOverviewProps) {
  return (
    <section id={id} className="halfPage text-sm">
      <div className="section">
        <SectionTitle header="Project Overview" position="0.1" />
        <div className="space-y-4">
          <h4 className="text-primary mb-3 text-lg">Context</h4>
          <article className="space-y-4">
            {context.map(text => (
              <p key={text}>{text}</p>
            ))}
          </article>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <article className="space-y-4">
              <h4 className="text-primary mb-3 text-lg">My Role</h4>
              <div>
                {roles.map((role, index) => (
                  <span key={role}>
                    {role}
                    {index < roles.length - 1 ? ', ' : ''}
                  </span>
                ))}
              </div>
              <h4 className="text-primary mb-3 text-lg">Client</h4>
              <p>{client}</p>
              <h4 className="text-primary mb-3 text-lg">Deliverables</h4>
              <div className="space-y-2">
                {deliverables.map(deliverable => (
                  <p key={deliverable}>{deliverable}</p>
                ))}
              </div>
            </article>
            <article className="space-y-4">
              <h4 className="text-primary mb-3 text-lg">Timeline</h4>
              <p>{timeline}</p>
              <h4 className="text-primary mb-3 text-lg">Tools</h4>
              <p>{tools.join().replaceAll(',', ', ')}</p>
            </article>
          </div>
        </div>
      </div>
    </section>
  )
}

================
File: src/components/caseStudy/Research&Discovery.tsx
================
import { ReactNode } from 'react'
import { FaLightbulb } from 'react-icons/fa6'

import { Mockup } from '@/lib/types'
import { SectionTitle } from './SectionTitle'
import Mockups from '../mockups'
import { CasesMap } from '@/lib/constants'

const id = CasesMap.get(3).id

interface ResearchAndDiscoveryProps {
  description: string[] | ReactNode[]
  quote: string
  author: string
  takeaways: string[]
  mockups?: Mockup[]
}

export default function ResearchAndDiscovery({
  description,
  quote,
  author,
  takeaways,
  mockups
}: ResearchAndDiscoveryProps) {
  return (
    <section id={id} className="halfPage text-sm">
      <div className="section space-y-4">
        <SectionTitle position="0.3" header="Research & Discovery" />
        <article className="space-y-4">
          {description.map((p, key) => (
            <div key={key}>{p}</div>
          ))}
          {quote === '' ? null : (
            <div className="border-l-4 border-l-primary p-6 bg-background-subtle space-y-2 text-text-body">
              <p>{quote}</p>
              <p>- {author}</p>
            </div>
          )}
        </article>
        <h4 className="text-primary mb-3 text-lg">Key Research Takeaways</h4>
        <article className="space-y-4">
          {takeaways.map(item => (
            <div className="flex gap-4 items-center" key={item}>
              <FaLightbulb size={16} className="text-primary" />
              <p>{item}</p>
            </div>
          ))}
        </article>
        <Mockups mockups={mockups} />
      </div>
    </section>
  )
}

================
File: src/components/caseStudy/SectionTitle.tsx
================
import { cn } from '@/lib/utils'

interface SectionTitleProps {
  position: string
  header: string
  underline?: boolean
}

export function SectionTitle({
  position,
  header,
  underline = false
}: SectionTitleProps) {
  return (
    <h3
      className={cn(
        'mb-6',
        underline ? 'underline thickness-4 underline-offset-4' : ''
      )}>
      {position} {header}
    </h3>
  )
}

================
File: src/components/caseStudy/Strategy&Design.tsx
================
'use client'

import * as FaIcons from 'react-icons/fa6'
import { SectionTitle } from './SectionTitle'
import { Mockup } from '@/lib/types'
import Mockups from '../mockups'
import { CasesMap } from '@/lib/constants'

const id = CasesMap.get(4).id

type Highlight = {
  header: string
  Icon: string
  description: string
}

interface StrategyAndDesignProps {
  description: string[]
  highlights: Highlight[]
  mockups: Mockup[]
}

export default function StrategyAndDesign({
  description,
  highlights,
  mockups
}: StrategyAndDesignProps) {
  return (
    <section id={id} className="halfPage text-sm">
      <div className="section space-y-4">
        <SectionTitle position="0.4" header="UX Strategy & Design Decisions" />
        <article className="space-y-4">
          {description.map(text => (
            <p key={text}>{text}</p>
          ))}
        </article>
        <h4 className="text-primary mb-3 text-lg">Design Highlights</h4>
        <section className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {highlights.map(({ header, Icon, description }) => {
            // eslint-disable-next-line import/namespace
            const IconComponent = FaIcons[Icon as keyof typeof FaIcons]

            if (!IconComponent) {
              return null
            }
            return (
              <div
                key={header}
                className="flex flex-col gap-4 bg-background-section border border-white rounded-lg p-6 h-full">
                <div className="flex items-center space-x-2">
                  <div className="rounded-full bg-background-subtle p-2">
                    <IconComponent size={16} className="text-primary" />
                  </div>
                  <span className="font-semibold text-white">{header}</span>
                </div>
                <p>{description}</p>
              </div>
            )
          })}
        </section>
        <Mockups mockups={mockups} />
      </div>
    </section>
  )
}

================
File: src/components/caseStudy/WorkHero.tsx
================
'use client'

import Image from 'next/image'

interface WorkHeroProps {
  img: string
  header: string
  descriptor: string
}

export default function WorkHero({ img, header, descriptor }: WorkHeroProps) {
  return (
    <section className="page">
      <div className="section flex flex-col gap-6 items-center space-y-4 mt-10">
        <h1>{header}</h1>
        <p>{descriptor}</p>
        <Image
          src={img}
          alt={`${header} mockup`}
          width={0}
          height={0}
          sizes="100vw"
          className="h-auto w-full max-w-4xl max-h-[50vh] object-contain"
        />
      </div>
    </section>
  )
}

================
File: src/components/home/AboutMe.tsx
================
export default function AboutMe() {
  return (
    <section id="about" className="halfPage">
      <div className="section grid grid-cols-1 md:grid-cols-2 gap-6">
        <article className="flex flex-col gap-8 justify-center">
          <h2 className="mb-6">
            About <span className="text-primary">Me</span>
          </h2>
          <p>
            I’ve always been a creative, and my path to design started in music.
            Writing and producing for recording artists taught me how to
            brainstorm, collaborate, and turn ideas into something people could
            connect with. Music showed me how to create for people—and that’s
            what drew me to UX as well: the idea that creativity can shape
            experiences people actually enjoy and use. Transitioning into design
            felt like a natural extension of the work I was already doing. Now,
            I bring that same mindset to every project: thoughtful, hands-on,
            and focused on creating something that truly works for the people
            using it—because like the music, it was made for them.
          </p>
          <p>
            When I’m not designing, you can probably find me outside fishing—a
            hobby that gets me away from screens and helps clear my mind.
          </p>
        </article>
        <div className="flex-1 bg-background-section p-10 rounded-xl h-full w-auto mx-auto">
          <img
            src="/assets/Home_About.png"
            alt="Creative designs and headphones sketch"
            className="rounded-xl"
          />
        </div>
      </div>
    </section>
  )
}

================
File: src/components/home/FeaturedWorks.tsx
================
'use client'

import AvailableCases from '../caseStudy/AvailableCases'

export default function FeaturedWorks() {
  return (
    <section id="work" className="halfPage">
      <div className="section">
        <h3>Featured Work</h3>
        <AvailableCases current="" showHeader={false} />
      </div>
    </section>
  )
}

================
File: src/components/home/HomeHero.tsx
================
export default function HomeHero() {
  return (
    <section id="home" className="halfPage mt-16">
      <div className="section grid grid-cols-1 md:grid-cols-2 gap-6 justify-items-center md:justify-items-end">
        <article className="flex flex-col gap-6 justify-center">
          <h2>
            Hi, I’m <span className="text-primary">Sami</span> — a UX/UI
            designer who makes digital experiences both easy to use and hard to
            ignore.
          </h2>
          <p className="text-text-body">
            I design interfaces your users will appreciate.
          </p>
        </article>
        <img src="/assets/NewAvatar.png" alt="Avatar" />
      </div>
    </section>
  )
}

================
File: src/components/ui/button.tsx
================
import * as React from 'react'
import { Slot } from '@radix-ui/react-slot'
import { cva, type VariantProps } from 'class-variance-authority'

import { cn } from '@/lib/utils'

const buttonVariants = cva(
  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',
  {
    variants: {
      variant: {
        default:
          'bg-primary text-primary-foreground shadow hover:bg-primary/90',
        destructive:
          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',
        outline:
          'border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',
        secondary:
          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',
        ghost:
          'bg-background text-primary border border-primary hover:bg-primary hover:text-background',
        link: 'text-primary underline-offset-4 decoration-2 hover:underline'
      },
      size: {
        default: 'h-9 px-4 py-2',
        sm: 'h-8 rounded-md px-3 text-xs',
        lg: 'h-10 rounded-md px-8',
        icon: 'h-9 w-9'
      }
    },
    defaultVariants: {
      variant: 'default',
      size: 'default'
    }
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : 'button'
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = 'Button'

export { Button, buttonVariants }

================
File: src/components/ui/navigation-menu.tsx
================
import * as React from 'react'
import * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu'
import { cva } from 'class-variance-authority'
import { ChevronDown } from 'lucide-react'

import { cn } from '@/lib/utils'

const NavigationMenu = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Root
    ref={ref}
    className={cn(
      'relative z-10 flex max-w-max flex-1 items-center justify-center',
      className
    )}
    {...props}>
    {children}
    <NavigationMenuViewport />
  </NavigationMenuPrimitive.Root>
))
NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName

const NavigationMenuList = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.List
    ref={ref}
    className={cn(
      'group flex flex-1 list-none items-center justify-center',
      className
    )}
    {...props}
  />
))
NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName

const NavigationMenuItem = NavigationMenuPrimitive.Item

const navigationMenuTriggerStyle = cva(
  'group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent'
)

const NavigationMenuTrigger = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Trigger
    ref={ref}
    className={cn(navigationMenuTriggerStyle(), 'group', className)}
    {...props}>
    {children}{' '}
    <ChevronDown
      className="relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180"
      aria-hidden="true"
    />
  </NavigationMenuPrimitive.Trigger>
))
NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName

const NavigationMenuContent = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Content
    ref={ref}
    className={cn(
      'left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ',
      className
    )}
    {...props}
  />
))
NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName

const NavigationMenuLink = NavigationMenuPrimitive.Link

const NavigationMenuViewport = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
>(({ className, ...props }, ref) => (
  <div className={cn('absolute left-0 top-full flex justify-center')}>
    <NavigationMenuPrimitive.Viewport
      className={cn(
        'origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]',
        className
      )}
      ref={ref}
      {...props}
    />
  </div>
))
NavigationMenuViewport.displayName =
  NavigationMenuPrimitive.Viewport.displayName

const NavigationMenuIndicator = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Indicator
    ref={ref}
    className={cn(
      'top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in',
      className
    )}
    {...props}>
    <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
  </NavigationMenuPrimitive.Indicator>
))
NavigationMenuIndicator.displayName =
  NavigationMenuPrimitive.Indicator.displayName

export {
  navigationMenuTriggerStyle,
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport
}

================
File: src/components/ui/sheet.tsx
================
'use client'

import * as React from 'react'
import * as SheetPrimitive from '@radix-ui/react-dialog'
import { cva, type VariantProps } from 'class-variance-authority'
import { X } from 'lucide-react'

import { cn } from '@/lib/utils'

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  'fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out',
  {
    variants: {
      side: {
        top: 'inset-x-0 top-0 border-b border-primary data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top h-fit w-screen',
        bottom:
          'inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom',
        left: 'inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm',
        right:
          'inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm'
      }
    },
    defaultVariants: {
      side: 'right'
    }
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = 'right', className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}>
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      'flex flex-col space-y-2 text-center sm:text-left',
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = 'SheetHeader'

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = 'SheetFooter'

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn('text-lg font-semibold text-foreground', className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn('text-sm text-muted-foreground', className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription
}

================
File: src/components/AppNavbar.tsx
================
// components/AppNavbar.tsx
'use client'

import { useMemo } from 'react'
import { usePathname } from 'next/navigation'
import { Navbar } from '@/components/navbar'
// import type { NavItem } from '@/lib/constants'

export default function AppNavbar({
  navItems,
  caseItems
}: {
  navItems: any
  caseItems: any
}) {
  const pathname = usePathname()
  const items = useMemo(
    () => (pathname === '/' ? navItems : caseItems),
    [pathname, navItems, caseItems]
  )

  return <Navbar items={items} />
}

================
File: src/components/footer.tsx
================
import { FaEnvelope, FaLinkedinIn, FaFilePdf } from 'react-icons/fa6'

import { ContactMap } from '@/lib/constants'

export default function Footer() {
  return (
    <footer id="contact" className="bg-background-section">
      <section className="max-w-custom mx-auto min-h-16 px-x-gap py-y-gap space-y-10">
        <p className="text-xl text-center">
          Open to joining a UX team - let's connect
        </p>
        <ul className="max-w-sm mx-auto grid grid-cols-1 sm:grid-cols-3 items-center justify-center gap-10">
          <a href={`mailto:${ContactMap.get('email')}`}>
            <li className="flex flex-col gap-4 items-center group cursor-pointer">
              <FaEnvelope size={30} className="text-primary" />
              <span className="transition-all duration-200 group-hover:text-primary">
                Email
              </span>
            </li>
          </a>
          <a href={ContactMap.get('linkedin')} target="_blank">
            <li className="flex flex-col gap-4 items-center group cursor-pointer">
              <FaLinkedinIn size={30} className="text-primary" />
              <span className="transition-all duration-200 group-hover:text-primary">
                LinkedIn
              </span>
            </li>
          </a>
          <a
            href="/assets/Sami_Fares_Resume.pdf"
            target="_blank"
            rel="noopener noreferrer"
            className="flex flex-col gap-4 items-center group cursor-pointer">
            <FaFilePdf size={30} className="text-primary" />
            <span className="transition-all duration-200 group-hover:text-primary">
              Resume
            </span>
          </a>
        </ul>
        <p className="text-text-body text-sm text-center">
          © {new Date().getFullYear()} Sami Fares. All rights reserved.
        </p>
      </section>
    </footer>
  )
}

================
File: src/components/mockups.tsx
================
'use client'

import { Mockup } from '@/lib/types'
import Image from 'next/image'

export default function Mockups({
  mockups
}: {
  mockups: Mockup[] | undefined
}) {
  if (mockups?.length === 0 || mockups == undefined) return null

  return (
    <>
      {mockups.map(mockup => (
        <section className="pt-6" key={mockup.explanation}>
          <div className="flex flex-wrap justify-center gap-6 pb-10">
            {mockup.imgs.map(src => (
              <div
                key={src}
                className="relative flex-none w-full max-w-[90vw] h-[50vh] sm:w-[clamp(20rem,30vw,32rem)] sm:h-[clamp(24rem,50vh,48rem)]">
                <Image
                  src={src}
                  alt="Mockup image"
                  fill
                  sizes="(max-width: 639px) 90vw, 30vw"
                  className="object-contain"
                />
              </div>
            ))}
          </div>

          <p className="bg-background-section w-fit text-center p-4 mx-auto text-text-body rounded-lg">
            {mockup.explanation}
          </p>
        </section>
      ))}
    </>
  )
}

================
File: src/components/navbar.tsx
================
'use client'

import { useMemo, useState } from 'react'
import { useRouter, usePathname } from 'next/navigation'
import Link from 'next/link'
import { FaBars } from 'react-icons/fa6'

import {
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuLink
} from '@/components/ui/navigation-menu'
import { Button } from '@/components/ui/button'
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet'
import { useSmoothScroll } from '@/lib/hooks/useSmoothScroll'
import { cn } from '@/lib/utils'

interface NavItem {
  label: string
  id: string
}
interface NavProps {
  items: NavItem[]
}

export const Navbar = ({ items }: NavProps) => {
  const pathname = usePathname()
  const router = useRouter()
  const { handleNavClick, scrollToPosition } = useSmoothScroll()

  const [open, setOpen] = useState(false)
  const [active, setActive] = useState('')

  const isHome = useMemo(() => pathname === '/', [pathname])

  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>, to: string) => {
    handleNavClick(e, to, {
      behavior: 'smooth',
      block: 'start'
    })
    setOpen(false)
    setActive(to)
  }

  const handleLogoClick = () => {
    if (isHome) {
      scrollToPosition(0)
    } else {
      router.push('/')
    }

    setActive('')
    return setOpen(false)
  }

  return (
    <header className="bg-background fixed top-0 w-full">
      <div className="max-w-custom h-16 mx-auto flex items-center justify-between py-y-4 px-x-gap">
        <span
          onClick={handleLogoClick}
          className={cn('text-lg font-bold text-primary cursor-pointer')}>
          Sami Fares
        </span>

        <nav className={cn('hidden', isHome ? 'md:block' : 'lg:block')}>
          <NavigationMenu>
            <NavigationMenuList className="flex gap-8">
              {items.map(item => {
                if (item.id === 'home') return null
                return (
                  <NavigationMenuItem
                    className={cn(
                      'navLink',
                      active === item.id ? 'active-navLink' : ''
                    )}
                    key={item.id}>
                    <NavigationMenuLink asChild>
                      <Link
                        key={item.id}
                        href={item.id}
                        onClick={e => handleClick(e, item.id)}>
                        {item.label}
                      </Link>
                    </NavigationMenuLink>
                  </NavigationMenuItem>
                )
              })}
            </NavigationMenuList>
          </NavigationMenu>
        </nav>

        {/* Mobile Navigation */}
        <div className={isHome ? 'md:hidden' : 'lg:hidden'}>
          <Sheet open={open} onOpenChange={setOpen}>
            <SheetTrigger asChild>
              <Button
                variant="ghost"
                size="icon"
                aria-label="Open menu"
                className="text-primary">
                <FaBars />
              </Button>
            </SheetTrigger>
            <SheetContent side="top" className="text-xl">
              <span
                onClick={handleLogoClick}
                className="cursor-pointer text-2xl font-bold text-primary">
                Sami Fares
              </span>
              <nav className="mt-6">
                <NavigationMenu>
                  <NavigationMenuList className="flex flex-col gap-4 items-start">
                    {items.map(item => {
                      if (item.id === 'home') return null
                      return (
                        <NavigationMenuItem className="navLink" key={item.id}>
                          <NavigationMenuLink asChild>
                            <Link
                              key={item.id}
                              href={item.id}
                              onClick={e => handleClick(e, item.id)}>
                              {item.label}
                            </Link>
                          </NavigationMenuLink>
                        </NavigationMenuItem>
                      )
                    })}
                  </NavigationMenuList>
                </NavigationMenu>
              </nav>
            </SheetContent>
          </Sheet>
        </div>
      </div>
    </header>
  )
}

================
File: src/lib/caseStudies/allCases.ts
================
const allCases = [
  {
    img: '/assets/MoodTunes/HomeScreen.png',
    label: 'MoodTunes',
    description:
      'Created a mobile music app that generates playlists based on a user’s current mood, energy, or activity. Designed a context-aware flow that makes discovery feel instant and intuitive — while subtly spotlighting local artists.',
    destination: '/works/moodtunes'
  },
  {
    img: '/assets/Home_JPW.png',
    label: 'Jones Pressure Washing',
    description:
      'Designed a full website for a local pressure washing business previously operating with only a single landing page. Led all UX, visual design, and copywriting — with a focus on local SEO, conversion-oriented content, and a premium brand presence built to scale in a competitive market.',
    destination: '/works/jones-pressure-washing'
  },
  {
    img: '/assets/Home_360.png',
    label: '360 Degree Care',
    description:
      'Designed a multi-page website for a new home health care provider launching online for the first time. Balanced client-driven visual preferences with user-centered UX to build trust, deliver clarity, and support long-term growth.',
    destination: '/works/360-degree-care'
  }
]

export default allCases

================
File: src/lib/caseStudies/case360.ts
================
const problemFraming = [
  '360 Degree Care was a newly established home health care agency in New Jersey. With no digital presence, they were virtually invisible to families searching online for in-home support. In a highly sensitive industry built on trust, that lack of visibility became a major barrier to growth.',
  'The client needed a professional website that could both inform and reassure their target audience: adults researching care options for aging parents or loved ones. The goal wasn’t just to generate leads — it was to build trust at a glance, answer common questions, and help users take that emotionally difficult first step.',
  'The design challenge was to combine emotional clarity with an easy-to-navigate information structure tailored to anxious, time-sensitive users making high-stakes decisions.'
]

const projectOverview = {
  context: [
    '360 Degree Care approached me to design and launch their first website. I led the full UX and design process — including site architecture, content strategy, and high-fidelity mockups — and worked closely with the client to align on structure and flow. While the final visual style reflected strong client preferences, I ensured the user experience remained clear, accessible, and emotionally resonant throughout.',
    'I also collaborated with the developer from the earliest stages to keep implementation aligned with both the design and evolving client input. This helped us stay nimble and avoid rework as decisions shifted.'
  ],
  roles: ['UX Designer', 'Copywriter'],
  client: '360 Degree Care - Home Health Services (NJ)',
  deliverables: [
    'Designs for all web pages',
    'Brand Assets',
    'Contact page with multiple forms',
    'Empathetic Copy'
  ],
  timeline: '8 Weeks',
  tools: ['Figma', 'Web Research', 'Google Docs', 'Linear']
}

const goalsAndChallenges = {
  goals: [
    'Establish legitimacy as a licensed care provider',
    'Emphasize dignity and active lifestyles in imagery',
    'Explain services clearly and in detail',
    'Communicate with transparency and warmth'
  ],
  challenges: [
    'Limited content available and short timeline',
    'Client insisted on oversized typography for readability',
    'Client rejected proposed calming color palette',
    'Non-standard layout and styling requests'
  ],
  description: [
    "The client's primary goal was to establish a digital presence quickly and start building trust with families in need of in-home care. While they had experience in traditional marketing, they were less familiar with the nuances of digital UX and web strategy. The project required thoughtful communication to align user-centered design decisions with a visually driven brand vision.",
    'I focused early efforts on educating the client about effective UX principles — including content hierarchy, scannability, and what builds trust for first-time visitors — while ensuring the final site honored their preferences and goals.'
  ]
}

const researchAndDiscovery = {
  description: [
    'I began with a competitive review of the top home care agencies in northern New Jersey, analyzing how they structured their websites, the tone of their messaging, and how effectively they reassured visitors navigating emotionally complex decisions.',
    'To complement that, I also conducted informal discovery through conversations with friends and family members who had recently gone through the process of finding home care. These stories underscored the urgency, emotional strain, and confusion that often accompany these decisions — and shaped how I approached tone, structure, and visual hierarchy.'
  ],
  quote:
    '"When you are in a position where you need to find care for a loved one, it can be scary. It feels like you are trusting the person you hire with their life".',
  author: 'Mario G',
  takeaways: [
    'Most competitors used calming color palettes and soft, reassuring imagery',
    'Sites with clear FAQs and multiple contact options instilled more trust',
    'Visitors scanned for key info like insurance accepted, service areas, and 24/7 availability',
    'Overly modern or salesy designs felt cold and disconnected from user needs',
    "CTAs needed to be visible early and often — visitors shouldn't have to search to reach out"
  ]
}

const strategyAndDesign = {
  description: [
    'Given the emotional nature of the service, I proposed a visual direction that combined calming blue tones with warm, uplifting imagery — portraying aging with dignity and vitality. While the client chose a more vibrant palette to stand out from competitors, they embraced the imagery concept fully, and it became a key visual theme across the site.',
    'Throughout the project, I worked to preserve core UX principles: structuring information to reduce cognitive load, emphasizing clarity of message, and ensuring large, tappable areas for mobile users. The goal was to keep the experience reassuring and intuitive, regardless of aesthetic preferences.'
  ],
  highlights: [
    {
      header: 'Emotionally Calibrated Copy',
      Icon: 'FaBullseye',
      description:
        'Tone was crafted to feel warm and informative, while addressing key user concerns.'
    },
    {
      header: 'Color Palette + Branding',
      Icon: 'FaPalette',
      description:
        'The client’s preference for vibrant orange was balanced with neutral supporting tones to maintain readability and trust.'
    },
    {
      header: 'Location callouts',
      Icon: 'FaStar',
      description:
        'Local areas were integrated across pages to build geographic authority and support SEO.'
    },
    {
      header: 'Imagery & Tone',
      Icon: 'FaSitemap',
      description:
        'Photography featured active, joyful older adults to reinforce dignity, comfort, and optimism.'
    }
  ],
  mockups: [
    {
      imgs: [
        '/assets/360 case/NursingMock.png',
        '/assets/360 case/AidesMock.png'
      ],
      explanation:
        'Mockups showing the Nursing Services page layout (left) and the Home Health Aide page (right)'
    }
  ]
}

const finalReflections = {
  description: [
    'Despite a tight timeline and strong client direction on visuals, I delivered a responsive, multi-page website that remained grounded in UX best practices. The final design performed well in early user feedback, with clear navigation paths, emotionally calibrated copy, and locally relevant content that built instant credibility.'
  ],
  subHeader: 'Final Homepage Design',
  url: 'www.360degreecare.net',
  achievments: [
    'Launched a fully responsive, multi-page website on a tight 5-week timeline',
    'Led UX structure and content strategy to support trust-building and clarity',
    'Developed high-fidelity designs tailored to mobile and desktop audiences',
    'Created localized, SEO-aware content to increase visibility across NJ markets',
    'Collaborated closely with a developer to efficiently implement shifting client feedback'
  ],
  lessons: [
    'Advocated for UX while respecting a strongly client-led brand vision',
    'Improved communication techniques with non-technical stakeholders',
    'Reinforced the importance of flexible thinking under aesthetic constraints',
    'Practiced translating emotion-rich research into actionable design decision',
    'Gained experience designing for high-empathy use cases where trust is critical'
  ],
  feedback:
    '"I’m really happy with how everything turned out. You were flexible, patient, and always found a way to make my ideas work. I appreciate how you took the time to explain things and still delivered something polished, and easy to use. Couldn’t have done it without you."',
  client: 'Owner, 360 Degree Care',
  img: ['/assets/360 case/360_FinalMock.png']
}

export default {
  problemFraming,
  projectOverview,
  goalsAndChallenges,
  researchAndDiscovery,
  strategyAndDesign,
  finalReflections
}

================
File: src/lib/caseStudies/caseJpw.ts
================
const problemFraming = [
  'Jones Pressure Washing was a brand-new company entering the competitive home services market in New Jersey. With no website, reviews, or digital footprint, they faced a major challenge: earning trust from customers who rely on online credibility to make quick decisions.',
  'The client needed more than a basic website—they needed a professional, trustworthy brand presence that could stand out locally and convert visitors into leads. The design had to clearly communicate services, professionalism, and local relevance, while remaining simple enough to manage for a small team.',
  'At its core, this project was about crafting legitimacy from scratch in an industry where visual trust, clarity, and local SEO directly impact business growth.'
]

const projectOverview = {
  context: [
    'Jones Pressure Washing is a residential and commercial exterior washing company based in New Jersey. At the start of the project, they had a basic one-page site that lacked clear structure, hierarchy, or branding. Their goal was to elevate their digital presence with a professional website that could build trust, attract local leads, and support long-term growth.',
    'I led the UX strategy, responsive design, content planning, and SEO foundation. I collaborated closely with a developer to ensure every custom-coded component was implemented as designed. The result is a clean, mobile-friendly experience built to establish credibility and drive conversions — even without existing reviews or a visual portfolio.'
  ],
  roles: ['UX Designer', 'Content Strategist', 'Copywriter'],
  client: 'Jones Pressure Washing (Local Home Service - NJ)',
  deliverables: [
    'Full homepage',
    'Services overview and detail pages',
    'Contact page',
    'SEO-focused copywriting'
  ],
  timeline: '6 Weeks',
  tools: ['Figma', 'Web Research', 'Google Docs', 'Linear']
}

const goalsAndChallenges = {
  goals: [
    'Establish a professional and trustworthy digital presence',
    'Generate leads through clear, action-oriented CTAs',
    'Clearly explain core services to first-time visitors',
    'Rank well for local search terms in New Jersey',
    "Appear as the 'elite' provider of this service"
  ],
  challenges: [
    'No brand identity, portfolio, or testimonials',
    'Limited visual assets or content at kickoff',
    'Highly competitive local market',
    'Tight timeline: 6 weeks from start to delivery'
  ],
  description: [
    "With no content, brand identity, or online credibility in place, Jones Pressure Washing needed more than a visual facelift — they needed a foundation. Rather than rehash the limitations, I focused on building a site that could earn trust quickly through clarity, visual professionalism, and strong local signals. The challenge wasn't just to make something look good — it was to design a conversion engine for a brand without a track record."
  ]
}

const researchAndDiscovery = {
  description: [
    'I conducted a competitive review of pressure washing businesses across Northern New Jersey, analyzing how they structured content, implemented SEO, and approached layout across desktop and mobile. I also read through Google and Yelp reviews to understand what customers cared about most — from communication and pricing to before-and-after results.',
    'Because the client lacked testimonials and a visual portfolio, I explored how to build trust without traditional social proof. I supplemented my research by speaking with homeowners in my network to better understand how they choose service providers. These informal conversations revealed a strong reliance on first impressions, location visibility, and quick clarity about services and pricing.'
  ],
  quote:
    '"Honestly I just google the service, look at the first couple options and whichever company looks more professional I usually call first"',
  author: 'Tyler B',
  takeaways: [
    'Sites must establish trust within the first few seconds of landing',
    'Services should be broken down into short, scannable chunks',
    'Local SEO (county and town names) plays a major role in discovery',
    'Mobile-first layouts are critical for on-the-go, last-minute searches',
    'CTAs should appear early and often — users shouldn’t have to search for ways to take action'
  ]
}

const strategyAndDesign = {
  description: [
    'Instead of starting with wireframes, I moved directly into high-fidelity mockups based on competitive analysis and a content-first strategy. I used Figma to iterate layout ideas quickly, incorporating client feedback while applying UX best practices in hierarchy, spacing, and call-to-action design.',
    'With no branding in place, I focused on structure, copy clarity, and visual trust signals to create a site that felt professional and conversion-ready. Every decision was grounded in one core objective: to build immediate credibility and make it easy for users to take action.'
  ],
  highlights: [
    {
      header: 'Above-the-fold CTA',
      Icon: 'FaBullseye',
      description:
        '“Request Your Free Estimate” appears prominently on the homepage and throughout the site to reduce friction and drive leads.'
    },
    {
      header: 'Premium color scheme',
      Icon: 'FaPalette',
      description:
        'A black, gold, and white palette was chosen to convey a high-end feel, matching the client’s vision of an “elite” pressure washing brand.'
    },
    {
      header: 'Copywriting with SEO intent',
      Icon: 'FaMagnifyingGlass',
      description:
        'Each service section included relevant keywords and H1/H2 structure to support local search optimization and improve findability.'
    },
    {
      header: 'Service architecture',
      Icon: 'FaSitemap',
      description:
        'Services were grouped into skimmable content blocks with links to dedicated pages, supporting both UX clarity and SEO indexing.'
    },
    {
      header: 'Local Targeting',
      Icon: 'FaStar',
      description:
        'Repeated geographic references (counties, towns) helped reinforce location relevance and build authority for local search.'
    },
    {
      header: 'Mobile optimization',
      Icon: 'FaMobileScreenButton',
      description:
        'Tap targets were enlarged, content was vertically stacked, and the layout prioritized for on-the-go usability.'
    }
  ],
  mockups: [
    {
      imgs: [
        '/assets/JPW case/JPW_Mock1.png',
        '/assets/JPW case/JPW_Mock2.png'
      ],
      explanation:
        'Mockups comparing the original layout (left) with the new version (right)'
    },
    {
      imgs: ['/assets/JPW case/JPW_MobilePair.png'],
      explanation:
        'Mobile Mockups of the Soft Wash Service page and Additional Service page'
    }
  ]
}

const finalReflections = {
  description: [
    'This project demonstrated how thoughtful UX strategy can establish credibility from the ground up — even for a brand with no content, reviews, or digital footprint. By designing for where the business was headed, not just where it was at launch, I helped the client establish a polished digital presence they could confidently grow into.',
    'Final development is currently in progress. All designs shown reflect approved deliverables, and I’m actively collaborating with the developer to bring them to life.'
  ],
  subHeader: 'Final Designs',
  url: 'www.jonespressurewashingnj.com',
  achievments: [
    'Created a scalable site structure designed to grow with the business',
    'Built a clean, professional brand presence from the ground up',
    'Delivered a responsive, mobile-first layout with strong conversion intent',
    'Designed an SEO-ready architecture with localized content and page structure',
    'Developed strategic content in the absence of branding, portfolio, or testimonials'
  ],
  lessons: [
    'Starting with user needs leads to stronger outcomes than chasing visual trends',
    'Content strategy can bridge gaps when visual assets are limited',
    'Clear information architecture is essential for service-based websites',
    'Local SEO considerations should shape site structure from the beginning',
    'Designing for future growth requires conscious, scalable decisions early on'
  ],
  feedback:
    '"The website is everything I envisioned it to be. I understood the challenges during this process but ultimately I am extremely happy with how it all turned out. The website is currently being developed and I am confident once it rolls out business will pick up for us."',
  client: 'Owner, Jones Pressure Washing',
  img: ['/assets/JPW case/JPW_FinalMocks.png']
}

const additionalCases = [
  {
    title: '360 Degree Care',
    img: '/assets/360 case/360_FinalMock.png',
    route: '/works/360-degree-care'
  }
]

export default {
  problemFraming,
  projectOverview,
  goalsAndChallenges,
  researchAndDiscovery,
  strategyAndDesign,
  finalReflections,
  additionalCases
}

================
File: src/lib/caseStudies/caseMood.tsx
================
const problemFraming = [
  'Users often feel disconnected from the music recommendations they receive. Traditional streaming algorithms focus on past behavior and general taste — but don’t account for real-time context like mood, energy level, or activity. As a result, users find themselves replaying the same playlists for workouts, focus, or relaxation, and are rarely exposed to new or local artists.',
  'Moodtunes addresses this by letting users select how they feel in the moment and generating playlists that match that energy — while subtly surfacing local artists they might otherwise miss.'
]

const projectOverview = {
  context: [
    'Moodtunes is a conceptual mobile music app designed to improve how users discover playlists that reflect their real-time mood, energy level, or activity. Unlike traditional platforms that rely on taste history or engagement patterns, Moodtunes takes a user-centered approach — letting users guide their listening experience based on how they feel in the moment.',
    'This project was initiated to expand my portfolio beyond client websites and explore the full product design process. I led all UX and UI design, including research, user flows, wireframes, and high-fidelity mockups. The app also introduces an additional layer of value by subtly promoting local artists, giving them visibility through emotionally aligned playlists.',
    'Moodtunes allowed me to apply emotional design thinking, mobile-first UX, and product strategy within a realistic scope, while experimenting with new patterns of discovery in the music space.'
  ],
  roles: ['UI/UX Designer', 'Copywriter'],
  client: 'Conceptual Music App',
  timeline: '8 Weeks',
  tools: ['Figma', 'Web Research', 'ChatGPT'],
  deliverables: ['User Flows', 'Wireframes', 'High-Fidelity Mockups']
}

const goalsAndChallenges = {
  description: [
    'The goal behind Moodtunes was to explore how music discovery could shift from algorithm-driven suggestions to real-time emotional curation. I wanted to create an experience that respected how users feel in the moment, not just what they’ve historically liked — while also giving local artists more visibility in a space dominated by mainstream data.',
    'To strengthen emotional alignment, the playlist logic also draws inspiration from how certain frequencies can trigger psychological responses — calming, energizing, or focusing the listener. This helped inform both the tone of the UI and the intent behind curated playlist groupings.'
  ],
  goals: [
    'Create a fast and frictionless flow where users can select their mood and receive music instantly — without needing to search, filter, or dig through menus.',
    'Balance emotional depth with simplicity, ensuring the design feels reactive and supportive, not overwhelming.',
    'Build a system that introduces local or lesser-known artists in a subtle, non-intrusive way — integrated into the flow, not tacked on.'
  ],
  challenges: [
    'No live user testing was conducted, so design decisions were informed by competitive review, informal feedback, and UX best practices.',
    'Because the app is conceptual, flows were designed to demonstrate clear UX logic and visual consistency, rather than functioning as a fully scoped MVP.'
  ]
}

const researchAndDiscovery = {
  description: [
    'To ground the concept in real user needs, I evaluated how current music platforms approach discovery. I reviewed Spotify, Pandora, and SoundCloud, focusing on how they match music to user context.',
    <>
      <ul className="list-disc indentedList">
        <li>
          Spotify excels at delivering suggestions based on listening history
          and algorithmic trends, but it lacks input for current mood or
          activity, making it feel static when users want something emotionally
          aligned in the moment.
        </li>
        <li>
          Pandora uses its Music Genome Project to deeply categorize tracks by
          musical traits, but the user’s emotional or situational context are
          never directly considered.
        </li>
        <li>
          SoundCloud placed value on exploration and the wide range of emerging
          artists, but the browsing experience can feel chaotic. There’s no
          structured way to find music that fits a vibe or intention.
        </li>
      </ul>
    </>,
    'These gaps revealed a clear opportunity: design a mobile experience that meets users where they are emotionally and mentally — not just musically. By giving users a simple way to express how they feel or what they’re doing, we can help them discover music that’s right for that moment. And by embedding local artist discovery into that flow, Moodtunes offers something that feels personal, fresh, and intentional.'
  ],
  takeaways: [
    'Existing platforms lack contextual awareness in music recommendations.',
    'Users crave novelty but don’t want to sacrifice relevance or mood alignment.',
    'There’s a growing interest in discovering local/independent artists, but visibility is low.',
    'Over-personalization in music platforms leads to repetitive listening habits, reducing discovery over time.',
    'Users often associate music with productivity, emotion regulation, or identity — but current apps don’t let them signal these needs directly.'
  ],
  quote: '',
  author: '',
  mockups: [
    {
      imgs: [
        '/assets/MoodTunes/homeWF.png',
        '/assets/MoodTunes/playlistWF.png'
      ],
      explanation:
        'Early wireframes showcasing the Homepage (left) and personalized mix (right)'
    }
  ]
}

const strategyAndDesign = {
  description: [
    'With a mobile-first approach, the core UX goal was to minimize friction and make discovery feel instant, personal, and emotionally relevant. I focused on designing a flow that lets users express how they feel with minimal effort — while keeping the interface clean, accessible, and emotionally resonant. Every screen was built to support intuitive navigation and promote meaningful listening moments, without overwhelming users with options.'
  ],
  highlights: [
    {
      header: 'Mood-Based Input Flow',
      Icon: 'FaBullseye',
      description:
        'Designed an intuitive mood/energy selection screen to streamline how users request playlists, minimizing taps and decision fatigue.'
    },
    {
      header: 'Emotionally-Aligned UI',
      Icon: 'FaPalette',
      description:
        'Applied calming tones, clean spacing, and mood-matching visuals to create an interface that feels responsive to user emotion.'
    },
    {
      header: 'Local Artist Discovery',
      Icon: 'FaStar',
      description:
        'Subtly highlighted local talent with small labels in the playlist view — keeping the UI clean while surfacing new voices.'
    },
    {
      header: 'Playlist Logic',
      Icon: 'FaGears',
      description:
        'Informed playlist groupings using sound frequency principles to align music with emotional or cognitive states like focus or relaxation.'
    }
  ],
  mockups: [
    {
      imgs: ['/assets/MoodTunes/ArtistProfile.png'],
      explanation: 'Mockup showing the Artist Profile Screen under Discovery'
    }
  ]
}

const finalReflections = {
  description: [
    'MoodTunes was designed as a passion project to explore product-focused UX beyond marketing websites. The challenge was to create a more emotionally intelligent music experience — one that responds to how users feel in the moment, not just what they’ve liked in the past.',
    'Working solo, I handled the full process from concept to UI delivery, using research, user flows, low-fidelity wireframes, and high-fidelity mockups to bring the idea to life. The result is a context-aware listening experience that curates music by energy, mood, and activity — while giving visibility to underrepresented local artists.'
  ],
  subHeader: 'Final Designs',
  url: '',
  achievments: [
    'Developed a complete user flow from onboarding to playlist discovery to artist exploration',
    'Created wireframes and high-fidelity mockups across mobile',
    'Built a scalable system for mood-based curation and discovery',
    'Designed lightweight UX elements to highlight local artists without disrupting flow'
  ],
  lessons: [
    'Emotion-based UX benefits from simplified input and high-contrast feedback',
    'Wireframing complex cases (like label spacing or playlist logic) saved time in high-fi',
    'Product case studies offer more layered storytelling opportunities than web projects',
    'Practiced translating emotion-rich research into actionable design decisions',
    'Solo concept work still benefits from real-world flow prioritization and UX writing'
  ],
  feedback: '',
  client: '',
  img: [
    '/assets/MoodTunes/HomeScreen.png',
    '/assets/MoodTunes/Playlist.png',
    '/assets/MoodTunes/ArtistProfile.png'
  ]
}

export default {
  problemFraming,
  projectOverview,
  goalsAndChallenges,
  researchAndDiscovery,
  strategyAndDesign,
  finalReflections
}

================
File: src/lib/hooks/useSmoothScroll.tsx
================
import { useCallback } from 'react'

export const useSmoothScroll = () => {
  const scrollToElement = useCallback(
    (
      elementId: string,
      options: ScrollIntoViewOptions = {
        behavior: 'smooth',
        block: 'start'
      }
    ): void => {
      const element = document.getElementById(elementId)
      if (element) {
        element.scrollIntoView(options)
      }
    },
    []
  )

  const handleNavClick = useCallback(
    (
      e: React.MouseEvent<HTMLAnchorElement>,
      elementId: string,
      options?: ScrollIntoViewOptions
    ): void => {
      e.preventDefault()
      scrollToElement(elementId, options)
    },
    [scrollToElement]
  )

  const scrollToPosition = useCallback(
    (y: number, options: ScrollToOptions = { behavior: 'smooth' }): void => {
      window.scrollTo({
        top: y,
        ...options
      })
    },
    []
  )

  return {
    scrollToElement,
    handleNavClick,
    scrollToPosition
  }
}

================
File: src/lib/constants.ts
================
const ContactMap = new Map()
ContactMap.set('email', 'samifdesigns@gmail.com')
ContactMap.set('linkedin', 'https://www.linkedin.com/in/sami-fares812')

const NavigationMap = new Map()
NavigationMap.set('home', { label: '', id: 'home' })
NavigationMap.set('work', { label: 'Work', id: 'work' })
NavigationMap.set('about', { label: 'About', id: 'about' })
NavigationMap.set('contact', { label: 'Contact', id: 'contact' })

const CasesMap = new Map()
CasesMap.set(0, { label: 'Problem', id: 'Problem' })
CasesMap.set(1, { label: 'Overview', id: 'Overview' })
CasesMap.set(2, { label: 'Challenges', id: 'Challenges' })
CasesMap.set(3, { label: 'Research', id: 'Research' })
CasesMap.set(4, { label: 'Strategy', id: 'Strategy' })
CasesMap.set(5, { label: 'Final', id: 'Final' })

export { ContactMap, NavigationMap, CasesMap }

================
File: src/lib/types.ts
================
export type Mockup = {
  imgs: string[]
  explanation: string
}

================
File: src/lib/utils.ts
================
import { clsx, type ClassValue } from 'clsx'
import { twMerge } from 'tailwind-merge'

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

================
File: .eslintrc.js
================
module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    tsconfigRootDir: __dirname
    // ✂— no "project" here any more
  },
  settings: {
    'import/resolver': {
      typescript: { project: ['./tsconfig.json'] }
    }
  },
  plugins: ['prettier', '@typescript-eslint', 'import'],
  extends: [
    'eslint:recommended',
    'plugin:import/recommended',
    'plugin:@typescript-eslint/recommended',
    'next/core-web-vitals',
    'prettier'
  ],
  rules: {
    'prettier/prettier': 'error',
    'no-unused-vars': 'warn',
    '@typescript-eslint/no-explicit-any': 'off',
    'react/no-unescaped-entities': 'off',
    '@next/next/no-img-element': 'off',
    'import/no-anonymous-default-export': 'off',
    'import/namespace': 'off',
    'react-hooks/exhaustive-deps': 'warn'
  },
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      parserOptions: {
        project: './tsconfig.json', // ← only TS files get typed linting
        tsconfigRootDir: __dirname,
        ignorePatterns: ['.eslintrc.js']
      },
      rules: {
        '@typescript-eslint/no-explicit-any': 'off'
      }
    }
  ]
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: .prettierrc
================
{
  "tabWidth": 2,
  "semi": false,
  "singleQuote": true,
  "trailingComma": "none",
  "bracketSpacing": true,
  "jsxBracketSameLine": true,
  "arrowParens": "avoid",
  "requirePragma": false,
  "insertPragma": false,
  "proseWrap": "never"
}

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}

================
File: next.config.mjs
================
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;

================
File: package.json
================
{
  "name": "my-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-slot": "^1.2.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.511.0",
    "next": "14.2.23",
    "react": "^18",
    "react-dom": "^18",
    "react-icons": "^5.5.0",
    "tailwind-merge": "^3.3.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.4.20",
    "eslint": "^8",
    "eslint-config-next": "14.2.23",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.4.0",
    "eslint-plugin-react": "^7.37.4",
    "eslint-plugin-react-hooks": "^5.1.0",
    "postcss": "^8",
    "prettier": "^3.5.0",
    "tailwindcss": "^3.4.17",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

================
File: tailwind.config.ts
================
import type { Config } from 'tailwindcss'
import tailwindcssAnimate from 'tailwindcss-animate'

const config: Config = {
  darkMode: ['class'],
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}'
  ],
  theme: {
    extend: {
      colors: {
        background: {
          DEFAULT: 'var(--bg-main)',
          section: 'var(--bg-section)',
          subtle: 'var(--bg-subtle)'
        },
        text: {
          heading: 'var(--text-heading)',
          body: 'var(--text-body)'
        },
        foreground: {
          DEFAULT: 'var(--fg)',
          headers: 'var(--fg-headers)',
          muted: 'var(--fg-muted)'
        },
        card: 'var(--card)',
        popover: {
          DEFAULT: 'hsl(var(--popover))',
          foreground: 'hsl(var(--popover-foreground))'
        },
        primary: 'var(--green)',
        secondary: {
          DEFAULT: 'hsl(var(--secondary))',
          foreground: 'hsl(var(--secondary-foreground))'
        },
        muted: {
          DEFAULT: 'hsl(var(--muted))',
          foreground: 'hsl(var(--muted-foreground))'
        },
        accent: {
          DEFAULT: 'hsl(var(--accent))',
          foreground: 'hsl(var(--accent-foreground))'
        },
        destructive: {
          DEFAULT: 'hsl(var(--destructive))',
          foreground: 'hsl(var(--destructive-foreground))'
        },
        border: 'hsl(var(--border))',
        input: 'hsl(var(--input))',
        ring: 'hsl(var(--ring))',
        chart: {
          '1': 'hsl(var(--chart-1))',
          '2': 'hsl(var(--chart-2))',
          '3': 'hsl(var(--chart-3))',
          '4': 'hsl(var(--chart-4))',
          '5': 'hsl(var(--chart-5))'
        }
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)'
      },
      fontFamily: {
        poppins: ['var(--font-poppins)'],
        inter: ['var(--font-inter)']
      },
      maxWidth: {
        custom: '1400px'
      },
      spacing: {
        'x-gap': '1.5rem',
        'y-gap': '2.5rem'
      }
    }
  },
  plugins: [tailwindcssAnimate]
}
export default config

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}
